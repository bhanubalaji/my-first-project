<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <smeta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>iChat - Realtime Node Socket.io Chat App</title>
    <head>
           
        <link rel="stylesheet" href="css/style.css">

        <script src="https://cdn.socket.io/4.6.1/socket.io.min.js"></script>


       


</head>

<body>
    <nav>
        <!-- <img class="logo" src="chat.png" alt="err"> -->
        <h1>Welcome to iChat App</h1>
    </nav>
    <div class="container"></div> 
    <div class="send">
        <form action="#" id="send-container">
            <input type="text" name="messageInp" id="messageInp">
            <button class="btn" type="submit">Send</button>
        </form>
    </div>



    <script >
        // Initialize a socket instance and establish a connection with the server
        const socket = io('http://localhost:3000');
      
        // Set up a listener for incoming chat messages from the server
      //   socket.on('chat message', (msg) => {
      //     console.log(msg);
      //   });
      
      //   // Emit a chat message to the server
      //   socket.emit('chat message', 'Hello World');





// Get DOM elements in respective Js variables
const form = document.getElementById('send-container');
     const messageInput = document.getElementById('messageInp')
     const messageContainer = document.querySelector(".container")
     
     // Audio that will play on receiving messages
  //    var audio = new Audio('ting.mp3');
     
     // Function which will append event info to the contaner
     const append = (message, position)=>{
         const messageElement = document.createElement('div');
         messageElement.innerText = message;
         messageElement.classList.add('message');
         messageElement.classList.add(position);
         messageContainer.append(messageElement);
         if(position =='left'){ 
             audio.play();
         }
     }
     
     
     // Ask new user for his/her name and let the server know
     
     const name = prompt("Enter your name to join");
     socket.emit('new-user-joined', name);
     
     
     // If a new user joins, receive his/her name from the server
     socket.on('user-joined', name =>{
         append(`${name} joined the chat`, 'right')
     })
     
     // If server sends a message, receive it
     socket.on('receive', data =>{
         append(`${data.name}: ${data.message}`, 'left')
     })
     
     // If a user leaves the chat, append the info to the container
     socket.on('left', name =>{
         append(`${name} left the chat`, 'right')
     })
     
     // If the form gets submitted, send server the message
     form.addEventListener('submit', (e) => {
         e.preventDefault();
         const message = messageInput.value;
         console.log(message)
         append(`You: ${message}`, 'right');
         socket.emit('send', message);
      //    messageInput.value = ''
     })
     
      </script>               



</body>
</html>






















<!-- <script defer src="../socket.io/client-dist/socket.io.js"></script> 

      <script type="importmap">
        {
          "imports": {
            "socket.io-client": "https://cdn.socket.io/4.4.1/socket.io.esm.min.js"
          }
        }
      </script>  -->
 

        <!-- <script type="/module"> -->
        <!-- import { io } from "socket.io-client"; -->
        <!-- const { io } = require("socket.io-client");  -->
     
<!--   




    <script  defer  src="js/client.js" > </script>  -->
    <!-- <script> 


        //import io from "socket.io-client";
        var io = require("socket.io-client");
       // import { io } from "socket.io-client"
       
       var socket = io("ws:http://localhost:8000");
       console.log(io)
       // import { transports } from "engine.io";
       // import { io } from "../socket.io-client"
             
       //         const socket = io("http://localhost:8000", {
       //             transports:["websocket"]
       //         })
       
       
       
       
       // Get DOM elements in respective Js variables
       const form = document.getElementById('send-container');
       const messageInput = document.getElementById('messageInp')
       const messageContainer = document.querySelector(".container")
       
       // Audio that will play on receiving messages
       var audio = new Audio('ting.mp3');
       
       // Function which will append event info to the contaner
       const append = (message, position)=>{
           const messageElement = document.createElement('div');
           messageElement.innerText = message;
           messageElement.classList.add('message');
           messageElement.classList.add(position);
           messageContainer.append(messageElement);
           if(position =='left'){ 
               audio.play();
           }
       }
       
       
       // Ask new user for his/her name and let the server know
       
       const name = prompt("Enter your name to join");
       socket.emit('new-user-joined', name);
       
       
       // If a new user joins, receive his/her name from the server
       socket.on('user-joined', name =>{
           append(`${name} joined the chat`, 'right')
       })
       
       // If server sends a message, receive it
       socket.on('receive', data =>{
           append(`${data.name}: ${data.message}`, 'left')
       })
       
       // If a user leaves the chat, append the info to the container
       socket.on('left', name =>{
           append(`${name} left the chat`, 'right')
       })
       
       // If the form gets submitted, send server the message
       form.addEventListener('submit', (e) => {
           e.preventDefault();
           const message = messageInput.value;
           append(`You: ${message}`, 'right');
           socket.emit('send', message);
           messageInput.value = ''
       })
       </script> -->
       